{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./src/components/Post/index.jsx","webpack:///./src/components/SEO/index.jsx"],"names":["IndexRoute","render","items","_this$props$data$site","this","props","data","site","siteMetadata","title","subtitle","allMarkdownRemark","edges","forEach","post","push","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_Post__WEBPACK_IMPORTED_MODULE_5__","key","node","fields","slug","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","_components_SEO__WEBPACK_IMPORTED_MODULE_7__","description","_components_Sidebar__WEBPACK_IMPORTED_MODULE_6__","className","React","Component","pageQuery","Post","_this$props$data$node","frontmatter","date","category","_this$props$data$node2","categorySlug","react__WEBPACK_IMPORTED_MODULE_1___default","dateTime","moment","format","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","SEO","_ref","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","detailsQuery","_React$createElement","metaDescription","metaTitle","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","name","content","property","_public_static_d_2027549627_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","keywords"],"mappings":"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","file":"component---src-pages-index-jsx-b3197cb5df7e689b7bb2.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Post from '../components/Post'\nimport Sidebar from '../components/Sidebar'\nimport SEO from '../components/SEO'\n\nclass IndexRoute extends React.Component {\n  render() {\n    const items = []\n    const { title, subtitle } = this.props.data.site.siteMetadata\n    const posts = this.props.data.allMarkdownRemark.edges\n    posts.forEach(post => {\n      items.push(<Post data={post} key={post.node.fields.slug} />)\n    })\n\n    return (\n      <Layout>\n        <div>\n          <SEO title={title} description={subtitle} />\n          <Sidebar {...this.props} />\n          <div className=\"content\">\n            <div className=\"content__inner\">{items}</div>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default IndexRoute\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        menu {\n          label\n          path\n        }\n        author {\n          name\n          email\n          instagram\n          twitter\n          linkedin\n          soundcloud\n          nextEP\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: { frontmatter: { layout: { eq: \"post\" }, draft: { ne: true } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport './style.scss'\n\nclass Post extends React.Component {\n  render() {\n    const {\n      title,\n      date,\n      category,\n      description,\n    } = this.props.data.node.frontmatter\n    const { slug, categorySlug } = this.props.data.node.fields\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__meta\">\n          <time\n            className=\"post__meta-time\"\n            dateTime={moment(date).format('MMMM D, YYYY')}\n          >\n            {moment(date).format('MMMM D, YYYY')}\n          </time>\n          <span className=\"post__meta-divider\" />\n          <span className=\"post__meta-category\" key={categorySlug}>\n            <Link to={categorySlug} className=\"post__meta-category-link\">\n              {category}\n            </Link>\n          </span>\n        </div>\n        <h2 className=\"post__title\">\n          <Link className=\"post__title-link\" to={slug}>\n            {title}\n          </Link>\n        </h2>\n        <p className=\"post__description\">{description}</p>\n        <Link className=\"post__readmore\" to={slug}>\n          Read\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default Post\n","/* eslint-disable */\nimport React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ title, description, lang, meta }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = \n          description || data.site.siteMetadata.subtitle\n        const metaTitle = title || data.site.siteMetadata.title\n        return (\n          <Helmet\n            htmlAttributes={{ lang: 'en' }}\n            meta={[{ name: 'description', content: metaDescription }]}\n            title={metaTitle}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: metaTitle,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                property: `og:url`,\n                content: `https://thefrvrplaylist.com`\n              },\n              {\n                property: `og:image`,\n                content: `https://thefrvrmusic.com/og-image.png`\n              },\n              {\n                name: `twitter:card`,\n                content: `summary_large_image`,\n              },\n              {\n                name: `twitter:creator`,\n                content: `@mvrtinfrvr`,\n              },\n              {\n                name: `twitter:title`,\n                content: metaTitle,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n              {\n                name: `twitter:image`,\n                content: `https://thefrvrmusic.com/og-image.png`\n              }\n            ]}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        subtitle\n      }\n    }\n  }\n`\n/* eslint-enable */\n"],"sourceRoot":""}